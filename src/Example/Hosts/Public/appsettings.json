{
  "ConnectionStrings": {
    "ExampleDb": "{{ .Values.settings.database.connection.example }}"
  },

  "Locations": {
    "Ping": "{{ .Values.settings.locations.api.baseUrl }}/ping"
  },

  "Features": {
    "Routing": {
      "Order": 0
    },
    "Authorization": {
      "Order": 1,
      "Sections": [
        {
          "Keycloak": {
            "Authority": "{{ .Values.settings.features.authorization.keycloak.authority }}",
            "ClientId": "{{ .Values.settings.features.authorization.keycloak.client.id }}",
            "MetadataAddress": "{{ .Values.settings.features.authorization.keycloak.authority }}/.well-known/openid-configuration"
          }
        }
      ]
    },
    "ExceptionHandler": {
      "Order": 2
    },
    "HealthCheck": {
      "Order": 3,
      "Sections": [
        {
          "Name": "PostgreSql",
          "Options": {
            "Name": "PostgreSqlExampleDB",
            "ConnectionStringConfigSection": "ExampleDb",
            "FailureStatus": "Unhealthy",
            "Tags": [
              "liveness",
              "readiness"
            ]
          }
        },
        {
          "Name": "RabbitMq",
          "Options": {
            "Name": "RabbitMqClient",
            "ConfigSection": "RabbitMqClient",
            "FailureStatus": "Unhealthy",
            "Tags": [
              "liveness",
              "readiness"
            ]
          }
        }
      ]
    },
    "Swagger": {
      "Order": 4,
      "Disabled": false
    },
    "Logging": {
      "Order": 5,
      "Serilog": {
        "MinimumLevel": "{{ .Values.settings.features.logging.serilog.minimumLevel }}",
        "WriteTo": [
          {
            "Name": "Console"
          },
          {
            "Name": "Elasticsearch",
            "Args": {
              "nodeUris": "{{ .Values.settings.features.elastic.nodes }}",
              "typeName": "logevent",
              "indexFormat": "meta-logs-{0:yyyy.MM.dd}"
            }
          }
        ]
      }
    }
  },

  "RabbitMqClient": {
    "Hosts": "{{ .Values.settings.rabbitMq.client.hosts }}",
    "UserName": "{{ .Values.settings.rabbitMq.client.userName }}",
    "Password": "{{ .Values.settings.rabbitMq.client.password }}",
    "VirtualHost": "{{ .Values.settings.rabbitMq.client.virtualHost }}",
    "Port": "{{ .Values.settings.rabbitMq.client.port }}"
  },

  "WeatherForecastClient": {
    "Url": "{{ .Values.settings.clients.weatherForecast.api.baseUrl }}"
  }
}
